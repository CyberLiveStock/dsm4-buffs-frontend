import { getAllLactations } from "@/services/lactationService";

export async function fetchLactationStats() {
  try {
    const response = await getAllLactations();
    const lactations = response.lactations || [];

    let totalProduzido = 0;
    const producaoPorBufala = {};
    const metricasPorBufala = {};

    lactations.forEach((lact) => {
      const tag = lact.tagBufala;
      const metricas = lact.metrica || [];

      metricasPorBufala[tag] = metricas.length;

      metricas.forEach((m) => {
        totalProduzido += m.quantidade;
        producaoPorBufala[tag] = (producaoPorBufala[tag] || 0) + m.quantidade;
      });
    });

    const totalBufalas = lactations.length;
    const mediaPorBufala = totalBufalas > 0 ? totalProduzido / totalBufalas : 0;

    console.log("üß™ Estat√≠sticas de Lacta√ß√µes:");
    console.log("üêÉ Total de b√∫falas:", totalBufalas);
    console.log("üçº Produ√ß√£o total de leite (L):", totalProduzido.toFixed(2));
    console.log("üìä Produ√ß√£o por b√∫fala:", producaoPorBufala);
    console.log("üìà M√©dia por b√∫fala (L):", mediaPorBufala.toFixed(2));
    console.log("üî¢ M√©tricas por b√∫fala:", metricasPorBufala);

    return {
      totalBufalas,
      totalProduzido,
      producaoPorBufala,
      mediaPorBufala,
      metricasPorBufala,
      lactations, 
    };
  } catch (error) {
    console.error("‚ùå Erro ao buscar estat√≠sticas de lacta√ß√µes:", error);
    return {
      totalBufalas: 0,
      totalProduzido: 0,
      producaoPorBufala: {},
      mediaPorBufala: 0,
      metricasPorBufala: {},
      lactations: [],
    };
  }
}
