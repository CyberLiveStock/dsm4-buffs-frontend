import { apiFetch } from "@/config/ApiConnection"

export async function getAllProductions() {
  try {
    const response = await apiFetch("/productions")

    // Verificar se response existe e tem a propriedade productions
    if (!response) {
      console.log("‚ö†Ô∏è getAllProductions: API retornou null")
      return []
    }

    const data = response.productions || []
    console.log(`‚úÖ getAllProductions: ${data.length} produ√ß√µes encontradas`)
    return data
  } catch (error) {
    console.error("‚ùå Erro no getAllProductions:", error)
    return []
  }
}

export async function getProductionById(id) {
  try {
    const data = await apiFetch(`/production/${id}`)
    console.log(`‚úÖ getProductionById: produ√ß√£o ${id} encontrada`)
    return data
  } catch (error) {
    console.error(`‚ùå Erro no getProductionById: ${id}`, error)
    return null
  }
}

export async function createProduction(productionData) {
  try {
    console.log("üì§ Dados para cria√ß√£o de produ√ß√£o:", productionData)

    // A API espera um array de coletas
    const payload = {
      coletas: Array.isArray(productionData.coletas) ? productionData.coletas : [productionData.coletas],
    }

    console.log("üì§ Payload final para API:", payload)

    const data = await apiFetch("/production", {
      method: "POST",
      body: JSON.stringify(payload),
      headers: { "Content-Type": "application/json" },
    })
    console.log("‚úÖ createProduction: produ√ß√£o criada", data)
    return data
  } catch (error) {
    console.error("‚ùå Erro no createProduction:", error)
    return null
  }
}

export async function updateProduction(id, productionData) {
  try {
    console.log(`üì§ Dados para atualiza√ß√£o da produ√ß√£o ${id}:`, productionData)

    // A API espera um array de coletas
    const payload = {
      coletas: Array.isArray(productionData.coletas) ? productionData.coletas : [productionData.coletas],
    }

    console.log("üì§ Payload final para update:", payload)

    const data = await apiFetch(`/production/${id}`, {
      method: "PUT",
      body: JSON.stringify(payload),
      headers: { "Content-Type": "application/json" },
    })
    console.log(`‚úÖ updateProduction: produ√ß√£o ${id} atualizada`)
    return data
  } catch (error) {
    console.error(`‚ùå Erro no updateProduction: ${id}`, error)
    return null
  }
}

export async function deleteProduction(id) {
  try {
    await apiFetch(`/production/${id}`, { method: "DELETE" })
    console.log(`‚úÖ deleteProduction: produ√ß√£o ${id} deletada`)
    return true
  } catch (error) {
    console.error(`‚ùå Erro no deleteProduction: ${id}`, error)
    return false
  }
}
